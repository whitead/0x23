{"mappings":"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","sources":["src/components/lib/selfies/selfies_worker.js","src/components/lib/selfies/selfies.js","node_modules/@parcel/runtime-js/lib/runtime-b8cecb080231797e.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js"],"sourcesContent":["import selfies from \"./selfies\";\n\nimportScripts('https://cdn.jsdelivr.net/pyodide/v0.21.3/full/pyodide.js');\n\nconst selfiesVersion = 2.0;\nlet pyodide = null;\n// make fake function to start with\nconst selfiesMod = {\n    decoder: s => { return null },\n    encoder: s => { return null },\n    pyodideLoaded: 'loading',\n    selfiesLoaded: 'loading'\n};\n\nonmessage = (e) => {\n    const data = e.data;\n    const mtype = data[0];\n    const mid = data[1];\n    let result = '';\n    if (mtype === 'loading-status') {\n        result = { pyodide: selfiesMod.pyodideLoaded, selfies: selfiesMod.selfiesLoaded };\n    } else if (mtype === 'encoder') {\n        result = selfiesMod.encoder(data[2]);\n    } else if (mtype === 'decoder') {\n        result = selfiesMod.decoder(data[2]);\n    } else if (mtype === 'vocab-size') {\n        result = selfiesMod.vocabSize;\n    }\n    postMessage([mtype, mid, result]);\n}\n\n\nloadPyodide().then((pyodide) => {\n    selfiesMod.pyodideLoaded = 'loaded';\n    pyodide.loadPackage('micropip').then(() => {\n        pyodide.runPythonAsync(`\n            import micropip\n            await micropip.install('selfies==${selfiesVersion}')\n            import selfies as sf\n            def get_basic_alphabet():\n                a = sf.get_semantic_robust_alphabet().copy()\n                # remove cations/anions except oxygen anion\n                to_remove = []\n                for ai in a:\n                    if \"+1\" in ai:\n                        to_remove.append(ai)\n                    elif \"-1\" in ai:\n                        to_remove.append(ai)\n                # remove [P],[#P],[=P]\n                to_remove.extend([\"[P]\", \"[#P]\", \"[=P]\"])\n\n                a -= set(to_remove)\n                a.add(\"[O-1]\")\n                a = list(sorted(a))\n                symbol_to_idx = {s: i for i, s in enumerate(a)}\n                return symbol_to_idx\n            vocab_stoi = get_basic_alphabet()\n            vocab_itos = {v: k for k, v in vocab_stoi.items()}\n            vocab_size = len(vocab_stoi)\n            def encoder(s):\n                s = sf.encoder(s)\n                return sf.selfies_to_encoding(s, vocab_stoi, enc_type='label')\n            def decoder(s):\n                s = sf.encoding_to_selfies(s, vocab_itos, enc_type='label')\n                return sf.decoder(s)\n        `, (err) => {\n            selfiesMod.pyodideLoaded = 'failed';\n            selfiesMod.selfiesLoaded = 'failed';\n        }).then(() => {\n            selfiesMod.selfiesLoaded = 'loaded'\n            const vocabSize = pyodide.globals.get('vocab_size');\n            selfiesMod.vocabSize = vocabSize;\n            const decoder = pyodide.globals.get('decoder');\n            selfiesMod.decoder = (selfies) => {\n                try {\n                    let result = decoder(selfies);\n                    return result;\n                } catch (e) {\n                    console.log(e);\n                    return null;\n                }\n            };\n            const encoder = pyodide.globals.get('encoder');\n            selfiesMod.encoder = (selfies) => {\n                try {\n                    let result = encoder(selfies).toJs();\n                    return result;\n                } catch (e) {\n                    console.log(e);\n                    return null;\n                }\n            };\n        });\n    }, (err) => {\n        selfiesMod.selfiesLoaded = 'failed';\n    })\n});\n","let selfieWorker = null;\nconst resolvers = {};\nlet id = 0;\nconst MAX_ID = 2 ** 10\nlet _vocabSize = null;\n\nconst startSelfiesWorker = () => {\n    if (selfieWorker !== null)\n        return;\n    const file_dir = import.meta.url.replace(/[^/]*$/, '');\n    ///const worker_url = new URL(file_dir + 'selfies_worker.js');\n    const worker_url = new URL(\"./selfies_worker.js\", import.meta.url);\n    selfieWorker = new Worker(worker_url);\n    selfieWorker.onmessage = (e) => {\n        const data = e.data;\n        const mid = data[1];\n        const result = data[2];\n\n        if (data[0] === 'vocab-size') {\n            _vocabSize = result;\n        }\n\n        resolvers[mid](result);\n        delete resolvers[mid];\n    }\n}\n\nconst selfiesLoadStatus = () => {\n    if (selfieWorker === null) {\n        return new Promise(resolve =>\n            resolve({\n                pyodide: 'waiting',\n                selfies: 'waiting'\n            }));\n    }\n    id = (id + 1) % MAX_ID;\n    selfieWorker.postMessage(['loading-status', id, null]);\n    return new Promise(resolve => resolvers[id] = resolve);\n}\n\nconst decoder = (s) => {\n    if (selfieWorker === null) {\n        return new Promise((resolve, reject) =>\n            reject(new Error('Must call startSelfiesWorker() first')));\n    }\n    id = (id + 1) % MAX_ID;\n    selfieWorker.postMessage(['decoder', id, s]);\n    return new Promise(resolve => resolvers[id] = resolve);\n}\n\nconst encoder = (s) => {\n    if (selfieWorker === null) {\n        return new Promise((resolve, reject) =>\n            reject(new Error('Must call startSelfiesWorker() first')));\n    }\n    id = (id + 1) % MAX_ID;\n    selfieWorker.postMessage(['encoder', id, s]);\n    return new Promise(resolve => resolvers[id] = resolve);\n}\n\nconst vocabSize = () => {\n    if (_vocabSize === null) {\n        if (selfieWorker === null) {\n            return new Promise((resolve, reject) =>\n                reject(new Error('Must call startSelfiesWorker() first')));\n        }\n        id = (id + 1) % MAX_ID;\n        selfieWorker.postMessage(['vocab-size', id, null]);\n        return new Promise(resolve => resolvers[id] = resolve);\n    } else {\n        return new Promise(resolve => resolve(_vocabSize));\n    }\n\n}\n\nconst selfies = {\n    startSelfiesWorker,\n    selfiesLoadStatus,\n    decoder,\n    encoder,\n    vocabSize\n};\n\nexport default selfies;\n\n","module.exports = require('./helpers/bundle-url').getBundleURL('l3Aob') + require('./helpers/bundle-manifest').resolve(\"l3Aob\");","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n"],"names":["parcelHelpers","require","_selfies","importScripts","selfiesMod","decoder","s","encoder","pyodideLoaded","selfiesLoaded","onmessage","e","data","mtype","mid","result","pyodide","selfies","vocabSize","postMessage","loadPyodide","then","loadPackage","runPythonAsync","err","globals","get","console","log","toJs","selfieWorker","resolvers","id","MAX_ID","_vocabSize","startSelfiesWorker","replace","worker_url","URL","Worker","selfiesLoadStatus","Promise","resolve","reject","Error","module","exports","getBundleURL","bundleURL","getBaseURL","url","value","matches","stack","match","getOrigin","mapping","register","pairs","keys","Object","i","length","resolved","interopDefault","a","__esModule","default","defineInteropFlag","defineProperty","exportAll","source","dest","forEach","key","hasOwnProperty","enumerable","export","destName"],"version":3,"file":"selfies_worker.351dd092.js.map"}